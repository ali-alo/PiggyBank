@model IEnumerable<Category>

<div class="row bg-white p-4 rounded-2 g-2 gx-2">
    <div class="d-flex align-items-center">
        <h1 class="text-center center">Ваши Категории</h1>
        <a class="fs-5 ms-auto text-decoration-none" asp-action="Create" asp-controller="Category">Добавить категорию <i class="bi bi-plus-square-fill"></i></a>
    </div>
    <hr />

    @foreach (var category in Model)
    {
        <div class="col-md-4">
            <div class="w-100 d-flex">
                <a class="nowrap btn @(category.IsIncome ? "btn-outline-success" : "btn-outline-danger") w-100" asp-action="Index" asp-controller="Transaction" asp-route-categoryId="@category.Id">
                    <p class="lead d-inline">
                        @category.Name
                        <i class="bi @(category.IsIncome ? "bi-arrow-down-square-fill" : "bi-arrow-up-square-fill")"></i>
                    </p>
                </a>
                <div class="ms-auto d-flex justify-content-center align-items-center pointer">
                    <i class="bi bi-trash3-fill text-danger ms-2 fs-4" data-category-id="@category.Id"></i>
                </div>
            </div>
        </div>
    }

</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const trashIcons = document.querySelectorAll('.bi-trash3-fill');

            trashIcons.forEach(function (icon) {
                icon.addEventListener('click', async function () {
                    const categoryId = icon.getAttribute('data-category-id');
                    const transactionCount = await getTransactionCount(categoryId);
                    console.log(transactionCount);


                    if (confirm(`Вы точно хотите удалить эту категорию? Все транзакций связаны с этой категорией (${transactionCount} тр.) будут удалены соответственно.`)) {
                        fetch(`/Category/Delete?id=${categoryId}`, {
                            method: "DELETE",
                        })
                            .then(function (response) {
                                if (response.ok) {
                                    window.location.href = '/Category'
                                } else {
                                    console.log('error on the server');
                                }
                            })
                            .catch(function (error) {
                                console.error('Error:', error);
                            });
                    }
                });
            });
        });

        async function getTransactionCount(categoryId) {
            try {
                const response = await fetch(`/Category/TransactionsCount/${categoryId}`, {
                    method: "GET",
                });

                if (response.ok) {
                    const res = await response.json();
                    return res;
                } else {
                    console.log("Couldn't get transactions count");
                    throw new Error('Failed to get transactions count');
                }
            } catch (error) {
                console.error('Error:', error);
                throw error;
            }
        }

    </script>
}